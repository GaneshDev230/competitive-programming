//https://leetcode.com/problems/3sum/description/
class Solution {
public:
    vector<vector<int>> threeSum(vector<int>& nums) {
        sort(nums.begin(),nums.end());
        vector<vector<int>>re;
        int n=nums.size();
        for(int i=0;i<n-2;i++)
        {
           if(i==0||(i>0&&nums[i]!=nums[i-1]))
           {
            int lo=i+1,hi=n-1,s=0-nums[i];
            while(lo<hi)
            {
                if(nums[lo]+nums[hi]==s)
                {
                    vector<int>temp;
                    temp.push_back(nums[i]);
                    temp.push_back(nums[lo]);
                    temp.push_back(nums[hi]);
                    re.push_back(temp);
                
                while(lo<hi&&(nums[lo]==nums[lo+1])) lo++;
                while(lo<hi&&(nums[hi]==nums[hi-1]))hi--;
                lo++;
                hi--;
                }
               else if(nums[lo]+nums[hi]<s) 
                {
                  lo++;
                   }
                 else{
                 hi--;
                   }
                }
           }
        }
        return re;

        
    }
};
