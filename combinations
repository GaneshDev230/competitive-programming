//https://leetcode.com/problems/combinations/
class Solution {
public:   
     void dfs(int start,int n,int k,vector<int>sub,vector<vector<int>>&ans)
     {
        if(k==0)
        {
            ans.push_back(sub);
            return;
        }
        for(int i=start;i<=n-k+1;i++)
        {
            sub.push_back(i);
            dfs(i+1,n,k-1,sub,ans);
            sub.pop_back();
        }
     }
    vector<vector<int>> combine(int n, int k) {
        vector<vector<int>>ans;
        vector<int>sub;
        dfs(1,n,k,sub,ans);
        return ans;

        
    }
};
