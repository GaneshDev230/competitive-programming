//https://leetcode.com/problems/permutations/
class Solution {
public:
   void dfs(vector<vector<int>>&ans,vector<int>&res,vector<bool>&use,vector<int>& nums)
   {
     if(res.size()==nums.size())
     {
        ans.push_back(res);
        return;
     }
     for(int i=0;i<nums.size();i++)
     {
        if(use[i]==false)
        {
            use[i]=true;
            res.push_back(nums[i]);
            dfs(ans,res,use,nums);
            use[i]=false;
            res.pop_back();
        }
     }
   }
    vector<vector<int>> permute(vector<int>& nums) {
        vector<vector<int>>ans;
        vector<int>res;
        vector<bool>use(nums.size(),false);
        dfs(ans,res,use,nums);
        return ans;
        
    }
};
