//https://www.geeksforgeeks.org/problems/subset-sum-problem-1611555638/1
//{ Driver Code Starts

#include <bits/stdc++.h>
using namespace std;


// } Driver Code Ends
// User function template for C++

class Solution {
  public:
     int slove(vector<int>& arr,int i,int sum, vector<vector<int>>&dp)
    {
        if(sum==0) return 1;
        if(sum<0) return 0;
        if(i>=(arr.size())) return 0;
        if(dp[i][sum]!=-1) return dp[i][sum];
        int take=0,nt=0;
        nt=slove(arr,i+1,sum,dp);
        if(arr[i]<=sum)
        {
            take=slove(arr,i+1,sum-arr[i],dp);
        }
        dp[i][sum]=(take||nt);
        return dp[i][sum];
    }
    bool isSubsetSum(vector<int>& arr, int target) {
          vector<vector<int>>dp(arr.size()+1,vector<int>(target+1,-1));
         return slove(arr,0,target,dp);
         
       
     
    }
};

//{ Driver Code Starts.

int main() {

    int t;
    cin >> t;
    cin.ignore();
    while (t--) {
        vector<int> arr;
        string input;
        getline(cin, input);
        stringstream ss(input);
        int number;
        while (ss >> number) {
            arr.push_back(number);
        }
        int sum;
        cin >> sum;
        cin.ignore();

        Solution ob;
        if (ob.isSubsetSum(arr, sum))
            cout << "true" << endl;
        else
            cout << "false" << endl;
        cout << "~" << endl;
    }
    return 0;
}

// } Driver Code Ends
